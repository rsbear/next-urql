{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rsbear/dev/next-urql/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useKeyboardsQuery } from \"../generated/graphql\";\nimport withUrqlClient from \"../lib/withUrqlClient\";\n\nvar Home = function Home() {\n  var _useKeyboardsQuery = useKeyboardsQuery(),\n      _useKeyboardsQuery2 = _slicedToArray(_useKeyboardsQuery, 1),\n      _useKeyboardsQuery2$ = _useKeyboardsQuery2[0],\n      fetching = _useKeyboardsQuery2$.fetching,\n      error = _useKeyboardsQuery2$.error,\n      data = _useKeyboardsQuery2$.data;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, fetching && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Still fetching\"), error && __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Oops, something wong.\"), !fetching && !error && data && data.keyboards && __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, data.keyboards.map(function (k) {\n    return __jsx(\"div\", {\n      key: k.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, k.name));\n  })));\n};\n\nexport default withUrqlClient(Home);","map":{"version":3,"sources":["/Users/rsbear/dev/next-urql/pages/index.tsx"],"names":["React","useKeyboardsQuery","withUrqlClient","Home","fetching","error","data","keyboards","map","k","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,iBAAT,QAA4C,sBAA5C;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,IAAMC,IAAa,GAAG,SAAhBA,IAAgB,GAAM;AAAA,2BACUF,iBAAiB,EAD3B;AAAA;AAAA;AAAA,MACjBG,QADiB,wBACjBA,QADiB;AAAA,MACPC,KADO,wBACPA,KADO;AAAA,MACAC,IADA,wBACAA,IADA;;AAE1B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADf,EAEGC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFZ,EAGG,CAACD,QAAD,IAAa,CAACC,KAAd,IAAuBC,IAAvB,IAA+BA,IAAI,CAACC,SAApC,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAmB,UAACC,CAAD;AAAA,WAClB;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,CAAC,CAACE,IAAP,CADF,CADkB;AAAA,GAAnB,CADH,CAJJ,CADF;AAeD,CAjBD;;AAmBA,eAAeT,cAAc,CAACC,IAAD,CAA7B","sourcesContent":["import React, { FC } from \"react\";\nimport { useKeyboardsQuery, Keyboard } from \"../generated/graphql\";\nimport withUrqlClient from \"../lib/withUrqlClient\";\n\nconst Home: FC<any> = () => {\n  const [{ fetching, error, data }] = useKeyboardsQuery();\n  return (\n    <div>\n      {fetching && <h2>Still fetching</h2>}\n      {error && <h2>Oops, something wong.</h2>}\n      {!fetching && !error && data && data.keyboards && (\n        <div>\n          {data.keyboards.map((k: Keyboard) => (\n            <div key={k.id}>\n              <h2>{k.name}</h2>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default withUrqlClient(Home);\n"]},"metadata":{},"sourceType":"module"}